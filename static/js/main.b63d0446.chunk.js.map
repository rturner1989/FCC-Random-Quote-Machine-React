{"version":3,"sources":["quote-box.js","App.js","index.js"],"names":["QuoteBox","useState","data","setData","loading","setloading","timerProgress","setTimerProgress","quote","setQuote","author","setAuthor","color","setColor","click","setClick","refQuote","useRef","refAuthor","getNum","length","Math","floor","random","urlFetch","a","fetch","response","json","quotes","randomQuote","text","animate","element","current","opacity","useEffect","undefined","timer","setInterval","clearInterval","barTimer","state","Container","id","style","borderColor","className","ref","ButtonGroup","Button","href","target","onClick","navigator","clipboard","writeText","setTimeout","variant","disabled","filter","item","split","ProgressBar","animated","now","min","max","Alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b63d0446.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport { FaTwitter } from \"react-icons/fa\";\r\nimport { FiCopy } from \"react-icons/fi\";\r\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\r\nimport { VscLoading } from \"react-icons/vsc\";\r\n\r\nconst url = \"https://goquotes-api.herokuapp.com/api/v1/all/quotes\";\r\n\r\nconst QuoteBox = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setloading] = useState(true);\r\n    const [timerProgress, setTimerProgress] = useState(100);\r\n    const [quote, setQuote] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [color, setColor] = useState(\"#198754\");\r\n    const [click, setClick] = useState(false);\r\n\r\n    const refQuote = useRef(null);\r\n    const refAuthor = useRef(null);\r\n\r\n    const getNum = (length) => {\r\n        return Math.floor(Math.random() * length);\r\n    };\r\n\r\n    const urlFetch = async () => {\r\n        setloading(true);\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setData(data.quotes);\r\n        } catch (error) {}\r\n        setloading(false);\r\n    };\r\n\r\n    const randomQuote = () => {\r\n        const { text, author } = data[getNum(data.length - 1)];\r\n        setQuote(text);\r\n        setAuthor(author);\r\n        setColor(\"#198754\");\r\n        animate(refAuthor);\r\n        animate(refQuote);\r\n        setTimerProgress(0);\r\n    };\r\n\r\n    const shortQuote = () => {\r\n        const filter = data.filter((item) => item.text.split(\" \").length <= 10);\r\n        const { text, author } = filter[getNum(filter.length - 1)];\r\n\r\n        setQuote(text);\r\n        setAuthor(author);\r\n        setColor(\"#0d6efd\");\r\n        animate(refAuthor);\r\n        animate(refQuote);\r\n        setTimerProgress(0);\r\n    };\r\n\r\n    const longQuote = () => {\r\n        const filter = data.filter((item) => item.text.split(\" \").length > 20);\r\n        const { text, author } = filter[getNum(filter.length - 1)];\r\n\r\n        setQuote(text);\r\n        setAuthor(author);\r\n        setColor(\"#DC3545\");\r\n        animate(refAuthor);\r\n        animate(refQuote);\r\n        setTimerProgress(0);\r\n    };\r\n\r\n    const animate = (element) => {\r\n        element.current.animate(\r\n            [\r\n                { opacity: 0, color: \"#fff\" },\r\n                { opacity: 1, color: \"#000\" },\r\n            ],\r\n            300\r\n        );\r\n    };\r\n\r\n    const handleClick = () => {\r\n        navigator.clipboard.writeText(quote);\r\n        setClick(true);\r\n        setTimeout(() => {\r\n            setClick(false);\r\n        }, 2000);\r\n    };\r\n\r\n    useEffect(() => {\r\n        urlFetch();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (data[0] !== undefined) {\r\n            randomQuote();\r\n        }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            randomQuote();\r\n        }, 10000);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, [quote]);\r\n\r\n    useEffect(() => {\r\n        const barTimer = setInterval(() => {\r\n            setTimerProgress((state) => {\r\n                return state + 1;\r\n            });\r\n        }, 100);\r\n        return () => {\r\n            clearInterval(barTimer);\r\n        };\r\n    }, [timerProgress, quote]);\r\n\r\n    return (\r\n        <Container id=\"quote-box\" style={{ borderColor: color }}>\r\n            <Container id=\"quote-container\">\r\n                <div\r\n                    id=\"quote-text\"\r\n                    className=\"d-flex justify-content-center align-items-end\"\r\n                >\r\n                    <p id=\"text\" ref={refQuote}>\r\n                        {loading ? (\r\n                            <VscLoading\r\n                                className=\"loading-icon\"\r\n                                style={{ color: color }}\r\n                            />\r\n                        ) : (\r\n                            `\"${quote}\"`\r\n                        )}\r\n                    </p>\r\n                </div>\r\n                <div id=\"auth-text\">\r\n                    <p id=\"author\" ref={refAuthor}>\r\n                        {loading ? \"\" : `-${author}`}\r\n                    </p>\r\n                </div>\r\n            </Container>\r\n\r\n            <Container id=\"btn-container\">\r\n                <ButtonGroup id=\"link-group\">\r\n                    <Button\r\n                        id=\"tweet-quote\"\r\n                        href=\"twitter.com/intent/tweet\"\r\n                        target=\"_blank\"\r\n                        style={{ borderColor: color, color: color }}\r\n                    >\r\n                        <FaTwitter />\r\n                    </Button>\r\n                    <Button\r\n                        id=\"copy-quote\"\r\n                        onClick={handleClick}\r\n                        style={{ borderColor: color, color: color }}\r\n                    >\r\n                        {click ? <AiOutlineCheckCircle /> : <FiCopy />}\r\n                    </Button>\r\n                </ButtonGroup>\r\n\r\n                <ButtonGroup className=\"btn-group\">\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        id=\"new-quote\"\r\n                        onClick={randomQuote}\r\n                        disabled={loading}\r\n                    >\r\n                        New Quote\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-primary\"\r\n                        id=\"short-quote\"\r\n                        onClick={shortQuote}\r\n                        disabled={loading}\r\n                    >\r\n                        Short Quote\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-danger\"\r\n                        id=\"long-quote\"\r\n                        onClick={longQuote}\r\n                        disabled={loading}\r\n                    >\r\n                        Long Quote\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Container>\r\n            <div>\r\n                <ProgressBar\r\n                    id=\"progress-bar\"\r\n                    animated\r\n                    now={timerProgress}\r\n                    min={0}\r\n                    max={88}\r\n                />\r\n            </div>\r\n            {click ? <Alert className=\"alert\">Copied!</Alert> : \"\"}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default QuoteBox;\r\n","import React from \"react\";\nimport QuoteBox from \"./quote-box\";\n\nfunction App() {\n    return (\n        <div id=\"wrapper\">\n            <QuoteBox />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}