{"version":3,"sources":["quote-box.js","App.js","index.js"],"names":["QuoteBox","useState","data","setData","loading","setloading","timerProgress","setTimerProgress","quote","setQuote","author","setAuthor","color","setColor","click","setClick","carousel","setCarousel","refQuote","useRef","refAuthor","getNum","length","Math","floor","random","urlFetch","a","fetch","response","json","quotes","randomQuote","text","animate","shortQuote","filter","item","split","longQuote","element","current","opacity","handleClick","navigator","clipboard","writeText","setTimeout","useEffect","undefined","timer","setInterval","clearInterval","barTimer","state","Container","id","style","borderColor","className","ref","ButtonGroup","Button","href","target","onClick","variant","disabled","ProgressBar","animated","now","min","max","Alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bc54e83.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport { FaTwitter } from \"react-icons/fa\";\r\nimport { FiCopy } from \"react-icons/fi\";\r\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\r\nimport { VscLoading } from \"react-icons/vsc\";\r\n\r\nconst url = \"https://goquotes-api.herokuapp.com/api/v1/all/quotes\";\r\n\r\nconst QuoteBox = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setloading] = useState(true);\r\n    const [timerProgress, setTimerProgress] = useState(100);\r\n    const [quote, setQuote] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [color, setColor] = useState(\"#198754\");\r\n    const [click, setClick] = useState(false);\r\n    const [carousel, setCarousel] = useState(null);\r\n\r\n    const refQuote = useRef(null);\r\n    const refAuthor = useRef(null);\r\n\r\n    const getNum = (length) => {\r\n        return Math.floor(Math.random() * length);\r\n    };\r\n\r\n    const urlFetch = async () => {\r\n        setloading(true);\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setData(data.quotes);\r\n        } catch (error) {}\r\n        setloading(false);\r\n    };\r\n\r\n    const randomQuote = () => {\r\n        const { text, author } = data[getNum(data.length - 1)];\r\n        setQuote(text);\r\n        setAuthor(author);\r\n        setColor(\"#198754\");\r\n        animate(refAuthor);\r\n        animate(refQuote);\r\n        setTimerProgress(0);\r\n        setCarousel(\"random\");\r\n    };\r\n\r\n    const shortQuote = () => {\r\n        const filter = data.filter((item) => item.text.split(\" \").length <= 10);\r\n        const { text, author } = filter[getNum(filter.length - 1)];\r\n        setQuote(text);\r\n        setAuthor(author);\r\n        setColor(\"#0d6efd\");\r\n        animate(refAuthor);\r\n        animate(refQuote);\r\n        setTimerProgress(0);\r\n        setCarousel(\"short\");\r\n    };\r\n\r\n    const longQuote = () => {\r\n        const filter = data.filter((item) => item.text.split(\" \").length > 20);\r\n        const { text, author } = filter[getNum(filter.length - 1)];\r\n        setQuote(text);\r\n        setAuthor(author);\r\n        setColor(\"#DC3545\");\r\n        animate(refAuthor);\r\n        animate(refQuote);\r\n        setTimerProgress(0);\r\n        setCarousel(\"long\");\r\n    };\r\n\r\n    const animate = (element) => {\r\n        element.current.animate(\r\n            [\r\n                { opacity: 0, color: \"#fff\" },\r\n                { opacity: 1, color: \"#000\" },\r\n            ],\r\n            300\r\n        );\r\n    };\r\n\r\n    const handleClick = () => {\r\n        navigator.clipboard.writeText(quote);\r\n        setClick(true);\r\n        setTimeout(() => {\r\n            setClick(false);\r\n        }, 2000);\r\n    };\r\n\r\n    useEffect(() => {\r\n        urlFetch();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (data[0] !== undefined) {\r\n            randomQuote();\r\n        }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            switch (carousel) {\r\n                case \"random\":\r\n                    randomQuote();\r\n                    break;\r\n                case \"short\":\r\n                    shortQuote();\r\n                    break;\r\n                case \"long\":\r\n                    longQuote();\r\n                    break;\r\n                default:\r\n                    randomQuote();\r\n            }\r\n        }, 10000);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, [quote]);\r\n\r\n    useEffect(() => {\r\n        const barTimer = setInterval(() => {\r\n            setTimerProgress((state) => {\r\n                return state + 1;\r\n            });\r\n        }, 100);\r\n        return () => {\r\n            clearInterval(barTimer);\r\n        };\r\n    }, [timerProgress, quote]);\r\n\r\n    return (\r\n        <Container>\r\n            <Container id=\"quote-box\" style={{ borderColor: color }}>\r\n                <Container id=\"quote-container\">\r\n                    <div\r\n                        id=\"quote-text\"\r\n                        className=\"d-flex justify-content-center align-items-end\"\r\n                    >\r\n                        <p id=\"text\" ref={refQuote}>\r\n                            {loading ? (\r\n                                <VscLoading\r\n                                    className=\"loading-icon\"\r\n                                    style={{ color: color }}\r\n                                />\r\n                            ) : (\r\n                                `\"${quote}\"`\r\n                            )}\r\n                        </p>\r\n                    </div>\r\n                    <div id=\"auth-text\">\r\n                        <p id=\"author\" ref={refAuthor}>\r\n                            {loading ? \"\" : `-${author}`}\r\n                        </p>\r\n                    </div>\r\n                </Container>\r\n\r\n                <Container id=\"btn-container\">\r\n                    <ButtonGroup id=\"link-group-one\">\r\n                        <Button\r\n                            id=\"tweet-quote\"\r\n                            href=\"twitter.com/intent/tweet\"\r\n                            target=\"_blank\"\r\n                            style={{ borderColor: color, color: color }}\r\n                        >\r\n                            <FaTwitter />\r\n                        </Button>\r\n                        <Button\r\n                            id=\"copy-quote\"\r\n                            onClick={handleClick}\r\n                            style={{ borderColor: color, color: color }}\r\n                        >\r\n                            {click ? <AiOutlineCheckCircle /> : <FiCopy />}\r\n                        </Button>\r\n                    </ButtonGroup>\r\n\r\n                    <ButtonGroup id=\"quote-select-one\" className=\"btn-group\">\r\n                        <Button\r\n                            variant=\"outline-success\"\r\n                            id=\"new-quote\"\r\n                            onClick={randomQuote}\r\n                            disabled={loading}\r\n                        >\r\n                            New Quote\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outline-primary\"\r\n                            id=\"short-quote\"\r\n                            onClick={shortQuote}\r\n                            disabled={loading}\r\n                        >\r\n                            Short Quote\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outline-danger\"\r\n                            id=\"long-quote\"\r\n                            onClick={longQuote}\r\n                            disabled={loading}\r\n                        >\r\n                            Long Quote\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Container>\r\n                <div>\r\n                    <ProgressBar\r\n                        id=\"progress-bar\"\r\n                        animated\r\n                        now={timerProgress}\r\n                        min={0}\r\n                        max={88}\r\n                    />\r\n                </div>\r\n                {click ? <Alert className=\"alert\">Copied!</Alert> : \"\"}\r\n            </Container>\r\n            <Container id=\"btn-container-two\">\r\n                <ButtonGroup id=\"link-group-two\">\r\n                    <Button\r\n                        id=\"tweet-quote\"\r\n                        href=\"twitter.com/intent/tweet\"\r\n                        target=\"_blank\"\r\n                        style={{ borderColor: color, color: color }}\r\n                    >\r\n                        <FaTwitter />\r\n                    </Button>\r\n                    <Button\r\n                        id=\"copy-quote\"\r\n                        onClick={handleClick}\r\n                        style={{ borderColor: color, color: color }}\r\n                    >\r\n                        {click ? <AiOutlineCheckCircle /> : <FiCopy />}\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <ButtonGroup id=\"quote-select-two\" className=\"btn-group\">\r\n                    <Button\r\n                        variant=\"outline-success\"\r\n                        id=\"new-quote\"\r\n                        onClick={randomQuote}\r\n                        disabled={loading}\r\n                    >\r\n                        New Quote\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-primary\"\r\n                        id=\"short-quote\"\r\n                        onClick={shortQuote}\r\n                        disabled={loading}\r\n                    >\r\n                        Short Quote\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-danger\"\r\n                        id=\"long-quote\"\r\n                        onClick={longQuote}\r\n                        disabled={loading}\r\n                    >\r\n                        Long Quote\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Container>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default QuoteBox;\r\n","import React from \"react\";\nimport QuoteBox from \"./quote-box\";\n\nfunction App() {\n    return (\n        <div id=\"wrapper\">\n            <QuoteBox />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}